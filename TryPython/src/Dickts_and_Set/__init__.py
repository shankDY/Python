"""
СЛОВАРИ В PYTHON

Рассмотрим простой пример использования словаря. Заведем словарь Capitals, где индексом является название страны, 
а значением — название столицы этой страны. Это позволит легко определять по строке с названием страны ее столицу. 


Итак, каждый элемент словаря состоит из двух объектов: ключа и значения. В нашем примере ключом является название 
страны, значением является название столицы. Ключ идентифицирует элемент словаря, значение является данными, 
которые соответствуют данному ключу. Значения ключей — уникальны, двух одинаковых ключей в словаре быть не может. 



# Создадим пустой словарь Capitals, можно двумя способами
# Capitals = {}
Capitals = dict()

# Заполним его несколькими значениями
Capitals['Russia'] = 'Moscow'
Capitals['Ukraine'] = 'Kiev'
Capitals['USA'] = 'Washington'

Countries = ['Russia', 'France', 'USA', 'Russia']

for country in Countries:
    # Для каждой страны из списка проверим, есть ли она в словаре Capitals
    if country in Capitals:
        print('Столица страны ' + country + ': ' + Capitals[country])
    else:
        print('В базе нет страны c названием ' + country)

Для создания словаря с некоторым набором начальных значений можно использовать следующие конструкции:

Первые два способа можно использовать только для создания небольших словарей, перечисляя все их элементы. Кроме того, 
во втором способе ключи передаются как именованные параметры функции dict, поэтому в этом случае ключи могут быть 
только строками, причем являющимися корректными идентификаторами. В третьем и четвертом случае можно создавать 
большие словари, если в качестве аргументов передавать уже готовые списки, которые могут быть получены не обязательно 
перечислением всех элементов, а любым другим способом построены по ходу исполнения программы. В третьем способе 
функции dict нужно передать список, каждый элемент которого является кортежем из двух элементов: ключа и значения. В 
четвертом способе используется функция zip, которой передаются два списка одинаковой длины: список ключей и список 
значений. 

Capitals = {'Russia': 'Moscow', 'Ukraine': 'Kiev', 'USA': 'Washington'}
Capitals = dict(Russia='Moscow', Ukraine='Kiev', USA='Washington')
Capitals = dict([("Russia", "Moscow"), ("Ukraine", "Kiev"), ("USA", "Washington")])
Capitals = dict(zip(["Russia", "Ukraine", "USA"], ["Moscow", "Kiev", "Washington"]))
print(Capitals)
"""

