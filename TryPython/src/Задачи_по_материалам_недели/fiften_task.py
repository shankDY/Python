"""

Имеется реализованная функция f(x), принимающая на вход целое число x, которая вычисляет некоторое целочисленое
 значение и возвращает его в качестве результата работы.

Функция вычисляется достаточно долго, ничего не выводит на экран, не пишет в файлы и зависит только от
 переданного аргумента x.

Напишите программу, которой на вход в первой строке подаётся число n — количество значений x, для которых требуется
узнать значение функции f(x), после чего сами эти n значений, каждое на отдельной строке. Программа должна после
каждого введённого значения аргумента вывести соответствующие значения функции f на отдельной строке.

Для ускорения вычисления необходимо сохранять уже вычисленные значения функции при известных аргументах.

Обратите внимание, что в этой задаче установлено достаточно сильное ограничение в две секунды по времени
исполнения кода на тесте.



РАСШИФРОВКА ЗАДАНИЯ
Есть функция f(x) которая как-то обрабатывает значение x, но ф-ция очень медлительная и нам нужно
 написать надстройку к ней.

Прямо говорится, что: " Для ускорения вычисления необходимо сохранять уже вычисленные значения функции при известных
аргументах. " - то есть у нас есть значение х (ключ) и функция f произведенная над х (значение), которые будут
 проверяться на наличие в словаре или добавляться в НАШ словарь при их отсутствии, и следом выводится из нашего словаря.

А перед этим нам нужно указать количество значений х (n) и сами х.
Х-ключи обрабатываются и выводятся из него со значениями на экран.



"""

# тестовая функция


def f(n):
    return x + 1


# a = int(input())
# v = {}
# result = 0
# # в данную переменную сохраняем значения возвращаемые функцией
# for x in range(a):
#     # считываем значения х столько раз, чему равно a
#     i = int(input())
#     # если введенного юзером ключа(значения х по условию) нет в словаре, то записываем этот ключ и его значение
#     if i in v:
#         print(v[i])
#     else:
#         result = f(i)
#         v.setdefault(i, result)
#         print(result)

a = int(input())
v = {}
# в данную переменную сохраняем значения возвращаемые функцией
for x in range(a):
    # считываем значения х столько раз, чему равно a
    i = int(input())
    # если введенного юзером ключа(значения х по условию) нет в словаре, то записываем этот ключ и его значение
    if i not in v:
        v[i] = f(i)
    print(v[i])
