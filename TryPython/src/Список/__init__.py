# Задачи на по спискам

# students = ['Ivan', 'Masha', 'Sasha']
# students += ['Olga']
# students += 'Olga'  # добавляем к списку строку. а строка это массив из символов. и того у нас добавяться в список
# # символы 'o' 'l' 'g' 'a'
#
# print(students)

#
# a = [1, 2, 3]
# b = a
# # значения списка b?
#
# a[1] = 10
# # значения списка b?
# print(b)
#
# b[0] = 20
# print(a)
# # значения списка a?
#
# a = [5, 6]
# print(b)
# # значения списка b?


"""

# Напишите программу, на вход которой подается одна строка с целыми числами. Программа должна вывести сумму этих чисел.
suma = 0
a = [int(i) for i in input().split()]
for j in a:
    suma = suma + j
print(sum)

#тоже самое с применением sum
print(sum(int(i) for i in input().split()))

"""

"""Напишите программу, на вход которой подаётся список чисел одной строкой. Программа должна для каждого элемента 
этого списка вывести сумму двух его соседей. Для элементов списка, являющихся крайними, одним из соседей считается 
элемент, находящий на противоположном конце этого списка. Например, если на вход подаётся список "1 3 5 6 10", 
то на выход ожидается список "13 6 9 15 7" (без кавычек). 

Если на вход пришло только одно число, надо вывести его же.

Вывод должен содержать одну строку с числами нового списка, разделёнными пробелом.


a = [int(i) for i in input().split()]  # считываем числа через пробел и помещаем их в список
s = 0  # сумма соседей, по дефолту равна 0
array = []  # создаем пустой список

for j in range(0, len(a)):
    # если список состоит из одного элемента то составлем строку содержаший этот элемент и далее выводим на экран. иначе
    if len(a) == 1:
        array.append(a[j])
    # иначе делаем цикл и пробегаем по всем элементам списка
    # для крайних элементов делаем отдельные условия если элемент первый, то соседями  для него считаются
    # последний элемент списка и стоящий справа от первого элемента
    elif j == 0:
        s = a[1] + a[-1]
        array.append(s)
        # если элемент последний , то соседи - первый  элемент списка и стоящий слева от последнего элемента
    elif j == len(a) - 1:
        s = a[0] + a[-2]
        array.append(s)
        # для всех остальных соседями считаются элементы, стоящие справа и слева от элемента
    else:
        s = a[j + 1] + a[j - 1]
        array.append(s)
print(" ".join(str(t) for t in array))




//таже задача , но более компактнее
src = [int(i) for i in input().split()]
if len(src) == 1:
    print(src[0])
else:
    [print(src[i - 1] + src[(i + 1) % len(src)], end=' ') for i in range(len(src))]
    # выражение src[(i+1) % len(src)] на выходе для src = [1, 3, 5, 6, 10] даст [3, 5, 6, 10, 1]
    # потому, что (i+1) % len(src) даёт 1 2 3 4 0
    # т.е. таким образом 0й элемент оказывается в конце списка (как будто повернули циферблат)
    # таким образом если при обращении к i+1 случится выход за границу диапазона для последнего элемента
    # то при обращении к (i+1) % len(src) элементу выхода не произойдет
    # поэтому складывая -1й элемент с [(i+1) % len(src)]-тым элементом
    # мы выполним условие найти сумму предыдущего и следующего элементов
    # [print( src[(i+1) % len(src)]) for i in range(len(src))] 
    """





"""

Напишите программу, которая принимает на вход список чисел в одной строке и выводит на экран в одну строку 
значения, которые повторяются в нём более одного раза. 

Для решения задачи может пригодиться метод sort списка.

Выводимые числа не должны повторяться, порядок их вывода может быть произвольным.


a = [int(i) for i in input().split()]
aray = []
for i in range(0, len(a)):
    #если элемент повторяется больше одного раза. записать его в список
    if a.count(a[i]) > 1:
        aray.append(a[i])
    else:
        continue
print(" ".join(str(i) for i in set(aray)))


#тоже самое  но более приятно)
ls = [int(i) for i in input().split()]
for i in set(ls):
    if ls.count(i) > 1:
        print(i, end=' ')
"""


#двумерный массив

"""по факту мы сделали строчку из  n элементов и скопировали ее n раз. Поэтому. Изменяя что-то в одном из ссылол( так 
скажем) то меняется значения во всех строчках 
n =3
a =[[0]*3]*3

a[0][0] = 5
print(a)

правильная генерация двумерного списка
a = [[0]*n for i in range(n)] 

генерация двумерного списка с помощью вложенных списков
a = [[0 for j in range(n)] for i in range(n)] 

"""

